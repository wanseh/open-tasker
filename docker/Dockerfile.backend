FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json ./
COPY pnpm-lock.yaml ./
COPY pnpm-workspace.yaml ./
RUN npm install -g pnpm && pnpm install --frozen-lockfile

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY --from=deps /app/pnpm-lock.yaml ./
COPY --from=deps /app/pnpm-workspace.yaml ./
COPY apps/backend/ ./backend/
COPY packages/ ./packages/

# Copy workspace files to backend and install dependencies
RUN cp pnpm-lock.yaml backend/ && cp pnpm-workspace.yaml backend/
RUN cd backend && npm install -g pnpm && pnpm install --no-frozen-lockfile
RUN cp pnpm-lock.yaml packages/shared-types/ && cp pnpm-workspace.yaml packages/shared-types/
RUN cd packages/shared-types && npm install -g pnpm && pnpm install --no-frozen-lockfile

RUN cd backend && pnpm build

# Production image, copy all the files and run the app
FROM base AS runner
WORKDIR /app

ENV NODE_ENV production

RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 nestjs

COPY --from=builder /app/backend/dist ./dist
COPY --from=builder /app/backend/node_modules ./node_modules
COPY --from=builder /app/backend/package.json ./package.json

USER nestjs

EXPOSE 3001

CMD ["node", "dist/main.js"] 